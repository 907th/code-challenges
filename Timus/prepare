#!/usr/bin/env ruby

require "fileutils"
require "open-uri"

id = ARGV[0]
raise "Error: invalid problem id: #{id}" unless id =~ /\A\d{4}\Z/
puts "Prepare problem #{id}"

puts "Create directory"
dir = "#{__dir__}/#{id}"
raise "Error: directory #{id} already exists" if File.exists?(dir)
FileUtils.cp_r "#{__dir__}/Template", dir

puts "Scrape examples"
html = URI.open("https://acm.timus.ru/problem.aspx?space=1&num=#{id}").read

class HtmlSamplesExtractor
  SAMPLES_TABLE = %r{<TABLE CLASS="sample"><TR><TH WIDTH="\d+">input</TH><TH WIDTH="\d+">output</TH></TR>(.*?)</TABLE>}m
  ROWS_WITH_EXAMPLES = %r{<TR><TD><PRE>(.*?)</PRE></TD><TD><PRE>(.*?)</PRE></TD></TR>}m

  def initialize(html)
    @html = html
  end

  def extract
    if m = @html.match(SAMPLES_TABLE)
      m[1].scan(ROWS_WITH_EXAMPLES).map { |input, output| [fix_le(input), fix_le(output)] }
    else
      raise "Error: samples table is not found in the problem description"
    end
  end

  private

  def fix_le(str)
    str = str.clone
    str.gsub!("\r\n", "\n")
    str += "\n" unless str.end_with? "\n"
    str
  end
end

samples = HtmlSamplesExtractor.new(html).extract
if samples.count > 0
  tests_dir = "#{dir}/tests"
  FileUtils.mkdir(tests_dir) unless File.exists?(tests_dir)
  samples.each_with_index do |(input, output), index|
    puts "Save sample #{index + 1}"
    File.open("#{tests_dir}/#{index + 1}.in", "wb") { |f| f.write(input) }
    File.open("#{tests_dir}/#{index + 1}.out", "wb") { |f| f.write(output) }
  end
end

puts "Done"
